{
    "docs": [
        {
            "location": "/",
            "text": "Welcome\n\u00b6\n\n\nWelcome to the DMR System documentation!",
            "title": "Welcome"
        },
        {
            "location": "/#welcome",
            "text": "Welcome to the DMR System documentation!",
            "title": "Welcome"
        },
        {
            "location": "/requirements/needs/",
            "text": "Needs\n\u00b6\n\n\nManaging the Library\n\u00b6\n\n\nN1: CRUD Operations on Library\n\u00b6\n\n\nCurrently there is not an easy way to manage the DMR library. Songs must be manually added and checked into the repository. Users must manually edit the MP3 tags for the file in order to update the information. Deleting involves manually deleting files and then resyncing the repository.\n\n\nN2: Tracking Custom Information\n\u00b6\n\n\nCurrently there is no way to keep track of custom information for the songs in the library (such as date added, popularity, number of plays, etc.).\n\n\nN3: Songs vs. Samples\n\u00b6\n\n\nThere is no conceptual difference between a \"song\" and a \"sound bite\" or \"sample\" in the library. Any audio imported into the DMR library is imported as a song.\n\n\nIntegrating with Other Programs\n\u00b6\n\n\nN4: Generating Playlists\n\u00b6\n\n\nCurrently, there is no easy way to automatically generate playlists for Mixxx. To create a playlist, Users must import all songs into Mixxx, drag them individually into the playlist, and then export. Users can use programs like \nKid3\n, but the process is more difficult than it should be.\n\n\nGeneral Ease of Use\n\u00b6\n\n\nN5: Setup from Scratch\n\u00b6\n\n\nThere is no easy way to set up the entire system from scratch on a new machine.",
            "title": "Needs"
        },
        {
            "location": "/requirements/needs/#needs",
            "text": "",
            "title": "Needs"
        },
        {
            "location": "/requirements/needs/#managing-the-library",
            "text": "",
            "title": "Managing the Library"
        },
        {
            "location": "/requirements/needs/#n1-crud-operations-on-library",
            "text": "Currently there is not an easy way to manage the DMR library. Songs must be manually added and checked into the repository. Users must manually edit the MP3 tags for the file in order to update the information. Deleting involves manually deleting files and then resyncing the repository.",
            "title": "N1: CRUD Operations on Library"
        },
        {
            "location": "/requirements/needs/#n2-tracking-custom-information",
            "text": "Currently there is no way to keep track of custom information for the songs in the library (such as date added, popularity, number of plays, etc.).",
            "title": "N2: Tracking Custom Information"
        },
        {
            "location": "/requirements/needs/#n3-songs-vs-samples",
            "text": "There is no conceptual difference between a \"song\" and a \"sound bite\" or \"sample\" in the library. Any audio imported into the DMR library is imported as a song.",
            "title": "N3: Songs vs. Samples"
        },
        {
            "location": "/requirements/needs/#integrating-with-other-programs",
            "text": "",
            "title": "Integrating with Other Programs"
        },
        {
            "location": "/requirements/needs/#n4-generating-playlists",
            "text": "Currently, there is no easy way to automatically generate playlists for Mixxx. To create a playlist, Users must import all songs into Mixxx, drag them individually into the playlist, and then export. Users can use programs like  Kid3 , but the process is more difficult than it should be.",
            "title": "N4: Generating Playlists"
        },
        {
            "location": "/requirements/needs/#general-ease-of-use",
            "text": "",
            "title": "General Ease of Use"
        },
        {
            "location": "/requirements/needs/#n5-setup-from-scratch",
            "text": "There is no easy way to set up the entire system from scratch on a new machine.",
            "title": "N5: Setup from Scratch"
        },
        {
            "location": "/requirements/features/",
            "text": "Features\n\u00b6\n\n\nCRUD Operations on Library\n\u00b6\n\n\nF1: Add Song via Command Line\n\u00b6\n\n\nUser can add a song to the library via the command line.\n\n\nF2: Remove Song via Command Line\n\u00b6\n\n\nUser can remove a song from the library via the command line.\n\n\nF3: Modifying Song information via the Command Line\n\u00b6\n\n\nUser can modify song information via the command line.\n\n\nF9: Add Sample via Command Line\n\u00b6\n\n\nUser can add a sample to the library via the command line.\n\n\nF10: Remove Sample via Command Line\n\u00b6\n\n\nUser can remove a sample from the library via the command line.\n\n\nTracking Custom Information\n\u00b6\n\n\nF4: Number of Plays\n\u00b6\n\n\nSystem automatically tracks number of plays for each song.\n\n\nF5: Track Date Added\n\u00b6\n\n\nSystem automatially tracks date added for each song.\n\n\nF6: Popularity\n\u00b6\n\n\nUser can modify popularity/rating for each song.\n\n\nF7: Number of Requests\n\u00b6\n\n\nSystem tracks number of times each song has been requested.\n\n\nSongs vs. Samples\n\u00b6\n\n\nF8: Sample Tracking\n\u00b6\n\n\nSystem tracks samples separately from songs.\n\n\nF13: Switch between Song and Sample\n\u00b6\n\n\nOnce the user has added a Song to the library, the user can convert the song to a sample and vice versa.\n\n\nGenerating Playlists\n\u00b6\n\n\nF11: Chronological Playlist\n\u00b6\n\n\nUser can generate a chronological playlist via the command line.\n\n\nSetup from Scratch\n\u00b6\n\n\nF12: System Setup\n\u00b6\n\n\nUser can issue a single command via the command line to set up the entire system.",
            "title": "Features"
        },
        {
            "location": "/requirements/features/#features",
            "text": "",
            "title": "Features"
        },
        {
            "location": "/requirements/features/#crud-operations-on-library",
            "text": "",
            "title": "CRUD Operations on Library"
        },
        {
            "location": "/requirements/features/#f1-add-song-via-command-line",
            "text": "User can add a song to the library via the command line.",
            "title": "F1: Add Song via Command Line"
        },
        {
            "location": "/requirements/features/#f2-remove-song-via-command-line",
            "text": "User can remove a song from the library via the command line.",
            "title": "F2: Remove Song via Command Line"
        },
        {
            "location": "/requirements/features/#f3-modifying-song-information-via-the-command-line",
            "text": "User can modify song information via the command line.",
            "title": "F3: Modifying Song information via the Command Line"
        },
        {
            "location": "/requirements/features/#f9-add-sample-via-command-line",
            "text": "User can add a sample to the library via the command line.",
            "title": "F9: Add Sample via Command Line"
        },
        {
            "location": "/requirements/features/#f10-remove-sample-via-command-line",
            "text": "User can remove a sample from the library via the command line.",
            "title": "F10: Remove Sample via Command Line"
        },
        {
            "location": "/requirements/features/#tracking-custom-information",
            "text": "",
            "title": "Tracking Custom Information"
        },
        {
            "location": "/requirements/features/#f4-number-of-plays",
            "text": "System automatically tracks number of plays for each song.",
            "title": "F4: Number of Plays"
        },
        {
            "location": "/requirements/features/#f5-track-date-added",
            "text": "System automatially tracks date added for each song.",
            "title": "F5: Track Date Added"
        },
        {
            "location": "/requirements/features/#f6-popularity",
            "text": "User can modify popularity/rating for each song.",
            "title": "F6: Popularity"
        },
        {
            "location": "/requirements/features/#f7-number-of-requests",
            "text": "System tracks number of times each song has been requested.",
            "title": "F7: Number of Requests"
        },
        {
            "location": "/requirements/features/#songs-vs-samples",
            "text": "",
            "title": "Songs vs. Samples"
        },
        {
            "location": "/requirements/features/#f8-sample-tracking",
            "text": "System tracks samples separately from songs.",
            "title": "F8: Sample Tracking"
        },
        {
            "location": "/requirements/features/#f13-switch-between-song-and-sample",
            "text": "Once the user has added a Song to the library, the user can convert the song to a sample and vice versa.",
            "title": "F13: Switch between Song and Sample"
        },
        {
            "location": "/requirements/features/#generating-playlists",
            "text": "",
            "title": "Generating Playlists"
        },
        {
            "location": "/requirements/features/#f11-chronological-playlist",
            "text": "User can generate a chronological playlist via the command line.",
            "title": "F11: Chronological Playlist"
        },
        {
            "location": "/requirements/features/#setup-from-scratch",
            "text": "",
            "title": "Setup from Scratch"
        },
        {
            "location": "/requirements/features/#f12-system-setup",
            "text": "User can issue a single command via the command line to set up the entire system.",
            "title": "F12: System Setup"
        },
        {
            "location": "/requirements/use-cases/u1/",
            "text": "U1: Add Song via Command Line (with Command Line Arguments)\n\u00b6\n\n\nDescription\n\u00b6\n\n\nRadio Host adds a song to the system using the CLI and command line arguments.\n\n\nActor(s)\n\u00b6\n\n\nRadio Host\n\n\nPreconditions\n\u00b6\n\n\nSong is not in System\n\n\nPostconditions\n\u00b6\n\n\nSong is in System\n\n\nSteps\n\u00b6\n\n\n1) Radio host enters the command:\n\n\ndmr add song <songFile> --name\n=\n<songName> --artist\n=\n<songArtist> --year\n=\n<songYear>\n\n\n\n\n\n2) System records the song locally and in remote repository.\n\n\nAlternate\n\u00b6\n\n\n2) System cannot connect to remote repository.\n\n\n3) System displays \nCannot connect to remote repository.\n\n\n\n\n2) System cannot find file specified.\n\n\n3) System displays \nCannot find the specified audio file.\n\n\nFeatures\n\u00b6\n\n\nF1",
            "title": "U1: Add Song via Command Line (with Command Line Arguments)"
        },
        {
            "location": "/requirements/use-cases/u1/#u1-add-song-via-command-line-with-command-line-arguments",
            "text": "",
            "title": "U1: Add Song via Command Line (with Command Line Arguments)"
        },
        {
            "location": "/requirements/use-cases/u1/#description",
            "text": "Radio Host adds a song to the system using the CLI and command line arguments.",
            "title": "Description"
        },
        {
            "location": "/requirements/use-cases/u1/#actors",
            "text": "Radio Host",
            "title": "Actor(s)"
        },
        {
            "location": "/requirements/use-cases/u1/#preconditions",
            "text": "Song is not in System",
            "title": "Preconditions"
        },
        {
            "location": "/requirements/use-cases/u1/#postconditions",
            "text": "Song is in System",
            "title": "Postconditions"
        },
        {
            "location": "/requirements/use-cases/u1/#steps",
            "text": "1) Radio host enters the command:  dmr add song <songFile> --name = <songName> --artist = <songArtist> --year = <songYear>  2) System records the song locally and in remote repository.",
            "title": "Steps"
        },
        {
            "location": "/requirements/use-cases/u1/#alternate",
            "text": "2) System cannot connect to remote repository.  3) System displays  Cannot connect to remote repository.   2) System cannot find file specified.  3) System displays  Cannot find the specified audio file.",
            "title": "Alternate"
        },
        {
            "location": "/requirements/use-cases/u1/#features",
            "text": "F1",
            "title": "Features"
        },
        {
            "location": "/requirements/use-cases/u2/",
            "text": "U2: Add Song via Command Line (without Command Line Arguments)\n\u00b6\n\n\nDescription\n\u00b6\n\n\nRadio Host adds a song to the system using the CLI, but without command line arguments.\n\n\nActor(s)\n\u00b6\n\n\nRadio Host\n\n\nPreconditions\n\u00b6\n\n\nSong is not in System\n\n\nPostconditions\n\u00b6\n\n\nSong is in System\n\n\nSteps\n\u00b6\n\n\n1) Radio host enters the command:\n\n\ndmr add song\n\n\n\n\n\n2) System prompts user for the song file.\n\n\n3) User inputs the song filename/filepath.\n\n\n4) System prompts user for the song title.\n\n\n5) User inputs the song title.\n\n\n6) System prompts the user for the song artist.\n\n\n7) User inputs the song artist.\n\n\n8) System prompts user for the song year.\n\n\n9) User inputs the song year.\n\n\n10) System records the song locally and in the remote repository.\n\n\nAlternate\n\u00b6\n\n\n3) User inputs empty filename.\n\n\n4) System displays \"Cannot add file with no file name.\"\n\n\n5) System exits gracefully.\n\n\n\n\n3) User inputs nonexistent file.\n\n\n4) System displays \"Cannot find specified file.\"\n\n\n5) System exits gracefully.\n\n\nAt any other point, if the user enters an empty value, the system enters the default value (empty string).\n\n\nFeatures\n\u00b6\n\n\nF1",
            "title": "U2: Add Song via Command Line (without Command Line Arguments)"
        },
        {
            "location": "/requirements/use-cases/u2/#u2-add-song-via-command-line-without-command-line-arguments",
            "text": "",
            "title": "U2: Add Song via Command Line (without Command Line Arguments)"
        },
        {
            "location": "/requirements/use-cases/u2/#description",
            "text": "Radio Host adds a song to the system using the CLI, but without command line arguments.",
            "title": "Description"
        },
        {
            "location": "/requirements/use-cases/u2/#actors",
            "text": "Radio Host",
            "title": "Actor(s)"
        },
        {
            "location": "/requirements/use-cases/u2/#preconditions",
            "text": "Song is not in System",
            "title": "Preconditions"
        },
        {
            "location": "/requirements/use-cases/u2/#postconditions",
            "text": "Song is in System",
            "title": "Postconditions"
        },
        {
            "location": "/requirements/use-cases/u2/#steps",
            "text": "1) Radio host enters the command:  dmr add song  2) System prompts user for the song file.  3) User inputs the song filename/filepath.  4) System prompts user for the song title.  5) User inputs the song title.  6) System prompts the user for the song artist.  7) User inputs the song artist.  8) System prompts user for the song year.  9) User inputs the song year.  10) System records the song locally and in the remote repository.",
            "title": "Steps"
        },
        {
            "location": "/requirements/use-cases/u2/#alternate",
            "text": "3) User inputs empty filename.  4) System displays \"Cannot add file with no file name.\"  5) System exits gracefully.   3) User inputs nonexistent file.  4) System displays \"Cannot find specified file.\"  5) System exits gracefully.  At any other point, if the user enters an empty value, the system enters the default value (empty string).",
            "title": "Alternate"
        },
        {
            "location": "/requirements/use-cases/u2/#features",
            "text": "F1",
            "title": "Features"
        }
    ]
}